Problem Description
Write a program to find the node at which the intersection of two singly linked lists, A and B, begins. For example, the following two linked lists:

A:          a1 → a2
                   ↘
                     c1 → c2 → c3
                   ↗
B:     b1 → b2 → b3


/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
	public ListNode getIntersectionNode(ListNode A, ListNode B) {
        
        int lenA = size(A);
        int lenB = size(B);
        
        int absDiff = Math.abs(lenA-lenB);

        if(lenA > lenB){
            for(int i=0;i<absDiff;i++){
                A = A.next;
            }
        }else{
            for(int i=0;i<absDiff;i++){
                B = B.next;
            }
        }
        
        while(A != B){
            A = A.next;
            B = B.next;
        }
        return A;
	}

    public int size(ListNode head){
        int count = 0;
        ListNode tmp = head;
        while(tmp != null){
            count ++;
            tmp = tmp.next;
        }
        return count;
    }

}
