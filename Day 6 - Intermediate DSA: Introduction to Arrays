Q1. Good Pair
Problem Description
Given an array A and an integer B. A pair(i, j) in the array is a good pair if i != j and (A[i] + A[j] == B). Check if any good pair exist or not.

public class Solution {
    public int solve(int[] A, int B) {
        for(int i=0;i<A.length;i++){
            for(int j=i+1;j<A.length;j++){
                if(A[i]+A[j]==B){
                    return 1;
                }
            }
        }
        return 0;
    }
}


Q2. Reverse in a range
Problem Description
Given an array A of N integers and also given two integers B and C. Reverse the elements of the array A within the given inclusive range [B, C].

public class Solution {
    public int[] solve(int[] A, int B, int C) {
        return reverseArray(A,B,C);
    }

    public int[] reverseArray(int[] A,int B,int C){
        int i=B;
        int j=C;
        while(i<j){
            int tmp = A[i];
            A[i]=A[j];
            A[j]=tmp;
            i++;
            j--;
        }
        return A;
    }

}


Q3. Array Rotation
Problem Description
Given an integer array A of size N and an integer B, you have to return the same array after rotating it B times towards the right.

public class Solution {
    public int[] solve(int[] A, int B) {
        int rotate = B % A.length;
        
        A = reverse(A ,0,A.length);

        A= reverse(A ,0,rotate);
        A = reverse(A ,rotate,A.length);

        return A;
    }

    public int[] reverse(int[] A,int B, int C){
        int i=B;
        int j=C-1;
        while(i<j){
            int tmp = A[i];
            A[i]=A[j];
            A[j]=tmp;
            i++;
            j--;
        }
        return A;
    }

}

Q4. Time Complexity - Arrays
What is the time complexity for inserting/deleting at the beginning of the array?

TC - O(N)

Q5. Max Min of an Array
Problem Description
Given an array A of size N. You need to find the sum of Maximum and Minimum element in the given array.

public class Solution {
    public int solve(int[] A) {
        int max = A[0];
        int min = A[0];
        
        for(int i=1;i<A.length;i++){
            if(A[i] > max){
                max = A[i];
            }else if( A[i] < min){
                min = A[i];
            }

        }
        return max + min;
    }

}


Q6. Second Largest
Problem Description
You are given an integer array A. You have to find the second largest element/value in the array or report that no such element exists.

public class Solution {
    public int solve(int[] A) {
        int max=A[0];
        int secondMax=-1;
        for(int i=1;i<A.length;i++){
            if(A[i] > max) max=A[i];
        }
        for(int i=0;i<A.length;i++){
            if(A[i] == max) continue;
            else if(A[i] > secondMax) secondMax=A[i];
        }
        
        return secondMax;
    }
}

